on:
  workflow_dispatch:

name: Artifacts

env:
  RELEASE_BIN: hdr10plus_tool
  RELEASE_DIR: artifacts
  WINDOWS_TARGET: x86_64-pc-windows-msvc
  MACOS_TARGET: x86_64-apple-darwin
  LINUX_TARGET: x86_64-unknown-linux-musl

jobs:
  build:
    name: Build artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, windows]
        include: 
          - build: linux
            os: ubuntu-latest
            rust: stable
          - build: macos
            os: macos-latest
            rust: stable
          - build: windows
            os: windows-latest
            rust: stable

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        if: matrix.rust
        run: |
          rustup update ${{ matrix.rust }} --no-self-update
          rustup default ${{ matrix.rust }}

      - name: Install musl-tools (Linux)
        if: matrix.build == 'linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install musl-tools -y

      - name: Install p7zip (MacOS)
        if: matrix.build == 'macos'
        run: brew install p7zip

      - name: Build (Linux)
        if: matrix.build == 'linux'
        run: |
          rustup target add ${{ env.LINUX_TARGET }}
          cargo build --release --target ${{ env.LINUX_TARGET }}

      - name: Build (MacOS)
        if: matrix.build == 'macos'
        run: cargo build --release

      - name: Build (Windows)
        if: matrix.build == 'windows'
        run: cargo build --release

      - name: Create artifact directory
        run: |
          mkdir ${{ env.RELEASE_DIR }}
          mkdir dist

      - name: Create tarball (Linux)
        if: matrix.build == 'linux'
        run: |
          strip ./target/${{ env.LINUX_TARGET }}/release/${{ env.RELEASE_BIN }}
          mv ./target/${{ env.LINUX_TARGET }}/release/${{ env.RELEASE_BIN }} ./dist/${{ env.RELEASE_BIN }}
          7z a -ttar -so -an ./dist | 7z a -si ./${{ env.RELEASE_DIR }}/${{ env.RELEASE_BIN }}-${{ env.LINUX_TARGET }}.tar.gz

      - name: Create tarball (Windows)
        if: matrix.build == 'windows'
        shell: bash
        run: |
          mv ./target/release/${{ env.RELEASE_BIN }}.exe ./dist/${{ env.RELEASE_BIN }}.exe
          7z a -ttar -so -an ./dist | 7z a -si ./${{ env.RELEASE_DIR }}/${{ env.RELEASE_BIN }}-${{ env.WINDOWS_TARGET }}.tar.gz

      - name: Create tarball (MacOS)
        if: matrix.build == 'macos'
        run: |
          strip ./target/release/${{ env.RELEASE_BIN }}
          mv ./target/release/${{ env.RELEASE_BIN }} ./dist/${{ env.RELEASE_BIN }}
          7z a -ttar -so -an ./dist | 7z a -si ./${{ env.RELEASE_DIR }}/${{ env.RELEASE_BIN }}-${{ env.MACOS_TARGET }}.tar.gz

      - name: Upload Zip
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.build }}
          path: ./${{ env.RELEASE_DIR }}